From b9a2f68bb56a653a742f28d2680bdad07d9b6f3a Mon Sep 17 00:00:00 2001
From: Miles Alan <m@milesalan.com>
Date: Sun, 27 Sep 2020 18:10:42 -0500
Subject: [PATCH] Add -wm and -wmg flags to run dmenu as managed WM window
 (e.g. no override_redirect)

-wm sets override_redirect to false and allow input as a normal window
-wmg sets override_reidrect to false and grabs keyboard/mouse input
---
 dmenu.1 |  8 ++++++++
 dmenu.c | 31 +++++++++++++++++++++++++++----
 2 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/dmenu.1 b/dmenu.1
index 323f93c..2dd5946 100644
--- a/dmenu.1
+++ b/dmenu.1
@@ -22,6 +22,8 @@ dmenu \- dynamic menu
 .IR color ]
 .RB [ \-w
 .IR windowid ]
+.RB [ \-wm ]
+.RB [ \-wmg ]
 .P
 .BR dmenu_run " ..."
 .SH DESCRIPTION
@@ -80,6 +82,12 @@ prints version information to stdout, then exits.
 .TP
 .BI \-w " windowid"
 embed into windowid.
+.TP
+.BI \-wm
+Display as a managed WM window (e.g. don't set overide_redirect flag)
+.TP
+.BI \-wmg
+Display as a managed WM window (e.g. don't set overide_redirect flag) & grab keyboard
 .SH USAGE
 dmenu is completely controlled by the keyboard.  Items are selected using the
 arrow keys, page up, page down, home, and end.
diff --git a/dmenu.c b/dmenu.c
index 6b8f51b..d902db1 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -44,6 +44,8 @@ static struct item *items = NULL;
 static struct item *matches, *matchend;
 static struct item *prev, *curr, *next, *sel;
 static int mon = -1, screen;
+static int managed = 0;
+static int managedgrab = 0;
 
 static Atom clip, utf8;
 static Display *dpy;
@@ -198,7 +200,7 @@ grabkeyboard(void)
 	struct timespec ts = { .tv_sec = 0, .tv_nsec = 1000000  };
 	int i;
 
-	if (embed)
+	if (embed || managed)
 		return;
 	/* try to grab keyboard, we may have to wait for another process to ungrab */
 	for (i = 0; i < 1000; i++) {
@@ -589,7 +591,10 @@ setup(void)
 	XIM xim;
 	Window w, dw, *dws;
 	XWindowAttributes wa;
-	XClassHint ch = {"dmenu", "dmenu"};
+	XClassHint ch = {"dmenu", managed ?
+		"dmenu_managed" :
+		(managedgrab ? "dmenu_managedgrab" : "dmenu")
+	};
 #ifdef XINERAMA
 	XineramaScreenInfo *info;
 	Window pw;
@@ -651,7 +656,7 @@ setup(void)
 	match();
 
 	/* create menu window */
-	swa.override_redirect = True;
+	swa.override_redirect = managed || managedgrab ? False : True;
 	swa.background_pixel = scheme[SchemeNorm][ColBg].pixel;
 	swa.event_mask = ExposureMask | KeyPressMask | VisibilityChangeMask;
 	win = XCreateWindow(dpy, parentwin, x, y, mw, mh, 0,
@@ -665,7 +670,19 @@ setup(void)
 	                XNClientWindow, win, XNFocusWindow, win, NULL);
 
 	XMapRaised(dpy, win);
-	XSetInputFocus(dpy, win, RevertToParent, CurrentTime);
+
+	if (managed || managedgrab) {
+		XTextProperty prop;
+		char *windowtitle = prompt != NULL ? prompt : "dmenu";
+		Xutf8TextListToTextProperty(dpy, &windowtitle, 1, XUTF8StringStyle, &prop);
+		XSetWMName(dpy, win, &prop);
+		XSetTextProperty(dpy, win, &prop, XInternAtom(dpy, "_NET_WM_NAME", False));
+		XFree(prop.value);
+		XSelectInput(dpy, win, ExposureMask | KeyPressMask);
+	} else {
+		XSetInputFocus(dpy, win, RevertToParent, CurrentTime);
+	}
+
 	if (embed) {
 		XSelectInput(dpy, parentwin, FocusChangeMask);
 		if (XQueryTree(dpy, parentwin, &dw, &w, &dws, &du) && dws) {
@@ -705,6 +722,12 @@ main(int argc, char *argv[])
 		else if (!strcmp(argv[i], "-i")) { /* case-insensitive item matching */
 			fstrncmp = strncasecmp;
 			fstrstr = cistrstr;
+		} else if (!strcmp(argv[i], "-wm")) { /* display as managed wm window */
+			managed = 1;
+			managedgrab = 0;
+		} else if (!strcmp(argv[i], "-wmg")) { /* display as managed wm window & grab keyboard */
+			managed = 0;
+			managedgrab = 1;
 		} else if (i + 1 == argc)
 			usage();
 		/* these options take one argument */
-- 
2.25.4

